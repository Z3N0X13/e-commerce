import { Toaster } from "sonner";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";

import { CartUIProvider } from "@/app/context/cart-ui";
import { SessionWrapper } from "@/components/SessionWrapper";
import { ThemeProvider } from "@/components/theme/ThemeProvider";
import { CurrencyProvider } from "@/app/context/currency-context";

import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ThemeProvider>
      <html lang="en" suppressHydrationWarning>
        <head>
          <script
            dangerouslySetInnerHTML={{
              __html: `
          (function() {
            const savedTheme = localStorage.getItem('theme');
            const systemDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            if (savedTheme === 'dark' || (!savedTheme && systemDark)) {
              document.documentElement.classList.add('dark');
            } else {
              document.documentElement.classList.remove('dark');
            }
          })()
        `,
            }}
          />
        </head>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <SessionWrapper>
            <CurrencyProvider>
              <CartUIProvider>{children}</CartUIProvider>
            </CurrencyProvider>
          </SessionWrapper>
          <Toaster position="top-left" richColors />
        </body>
      </html>
    </ThemeProvider>
  );
}
