// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  pending
  processing
  shipped
  delivered
  cancelled
}

model User {
  id       String @id @default(cuid())
  name     String
  email    String @unique
  password String

  createdAt DateTime   @default(now())
  CartItem  CartItem[]
  Order     Order[]
}

model PasswordResetToken {
  id    String @id @default(uuid())
  email String
  token String @unique

  createdAt DateTime @default(now())
  expiresAt DateTime

  @@index([email])
}

model Product {
  id          Int        @id @default(autoincrement())
  title       String
  slug        String     @unique
  description String
  price       Float
  imageUrl    String
  inStock     Boolean
  CartItem    CartItem[]
}

model Comment {
  id        Int    @id @default(autoincrement())
  user      String
  comment   String
  rating    Int
  productId Int

  createdAt DateTime @default(now())
}

model CartItem {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int     @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id                   Int         @id @default(autoincrement())
  userId               String?
  user                 User?       @relation(fields: [userId], references: [id])
  email                String
  firstName            String
  lastName             String
  address              String
  apartment            String?
  city                 String
  postalCode           String
  country              String
  paymentMethod        String
  nameOnCard           String?
  cardNumber           String?
  expiry               String?
  cvc                  String?
  rememberMe           Boolean     @default(false)
  useShippingAsBilling Boolean     @default(true)
  shippingPrice        Float
  subtotal             Float
  total                Float
  status               OrderStatus @default(processing)
  shippedAt            DateTime?
  deliveredAt          DateTime?
  cancelledAt          DateTime?
  createdAt            DateTime    @default(now())
  items                OrderItem[]
}

model OrderItem {
  id        Int    @id @default(autoincrement())
  orderId   Int
  order     Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId Int
  title     String
  imageUrl  String
  quantity  Int
  price     Float
}
